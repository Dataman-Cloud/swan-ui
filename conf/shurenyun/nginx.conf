user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
    use epoll;
}


http {
    # Enumerate all the Tornado servers here
    upstream auth {
        server 10.3.11.41:8888;
    }

    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    index    index.html;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    tcp_nopush     on;
    tcp_nodelay     on;

    keepalive_timeout  65;
    proxy_read_timeout 200;

    gzip  on;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_types text/plain text/html text/css text/xml
               application/x-javascript application/xml
               application/atom+xml text/javascript;

    proxy_next_upstream error;

    server {
        listen       80;
        server_name  dashboard.shurenyun.com;

        rewrite ^(.*)$ https://$http_host$uri/ redirect;
    }

    server {
        listen       443 ssl;
        server_name  dashboard.shurenyun.com;
        root    /usr/share/nginx/html;

        ssl on;
        ssl_certificate      /etc/nginx/certs/shurenyun-dv.crt;
        ssl_certificate_key  /etc/nginx/certs/shurenyun.key.unsecure;


        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout  5m;

        ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers  'AES128+EECDH:AES128+EDH:!aNULL';
        ssl_prefer_server_ciphers   on;

        # serve static files
        location ~ ^/(images|javascript|js|css|flash|media|static)/  {
          expires 30d;
        }

        location / {
          try_files $uri /index.html;
        }
        location /streaming {
          proxy_pass      http://auth;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
          proxy_set_header Host $http_host;
          proxy_pass_header Server;
          proxy_redirect off;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Scheme $scheme;
        }
        location /api {
          auth_request    /_auth;
          proxy_pass      http://auth;
        }
        location ~ /api/v1/auth/(sign_in|registration) {
          proxy_pass      http://auth;
        }
        location ~ ^/logstash-* {
          auth_request    /_auth;
          proxy_pass      http://123.59.58.58:9200;
        }
        location ~ /api/v1/(applications|clusters) {
          auth_request    /_auth;
          proxy_pass      http://123.59.58.58:8080;
        }
        location = /_auth {
          internal;
          proxy_pass      http://auth/api/v1/auth;
          proxy_pass_request_body off;
          proxy_set_header Content-Length "";
          proxy_set_header X-Original-URI $request_uri;
          proxy_set_header Host $http_host;
          proxy_pass_header Server;
          proxy_redirect off;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Scheme $scheme;
        }
    }
}
